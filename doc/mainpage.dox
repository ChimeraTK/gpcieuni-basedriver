/**
@mainpage Desy PCIe Common Device Driver documentation
Desy PCIe Common Driver is a kernel loadable module that provices common driver functionalities that can be used by 
device derivers written for paricular devices.
 
@section Build
For release build type:
    @code
        make clean all
    @endcode

For debug build type:
    @code
        make clean debug
    @endcode

Make will automatically install shared files required by other modules to compile and install:
- Module symbol file to /lib/modules/\<kernel version\>/gpcieuni/Gpcieuni.symvers
- pcieuni_io.h header file to /usr/local/include/gpcieuni/pcieuni_io.h
- pcieuni_ufn.h header file to /usr/local/include/gpcieuni/pcieuni_ufn.h
- pcieuni_buffer.h header file to /usr/local/include/gpcieuni/pcieuni_buffer.h

@section install_run Install & run

Type:
    @code
        make install
        modprobe gpcieuni
    @endcode

@section parameters Module parameters
none

@section Functionality

    @subsection driver-operations PCI driver operations
    The gpcieuni module provides common implementation of PCI driver functions, including: 
    - device probing: pcieuni_probe_exp(), pcieuni_remove_exp())
    - common ioctl operations: pcieuni_ioctl_exp()
    - common read/write interface: pcieuni_read_exp(), pcieuni_write_exp()

    @subsection dma-bufferList Circular list of DMA buffers
    The gpcieuni module provides implementation of circular list of buffers mapped to target PCI device. Such 
    buffers can be used for DMA transfer from PCI device. The implmentation includes allocation and thread-safe
    manipulation of the buffer list. For details see:
    - pcieuni_buffer.h
    - pcieuni_buffer.c

    @subsection utility-functions Common utility functions
    The gpcieuni module provides a set of utility functions. See file pcieuni_ufn.c 
    
*/